<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd ">
    <mvc:annotation-driven/>
    <context:component-scan base-package="com.wangyichao.*"/>
    <mvc:default-servlet-handler/>

    <!--设置文件上传配置-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <!--<property name="maxUploadSize" value="104857600" />-->
    <!--<property name="maxInMemorySize" value="4096" />-->
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>

    <!--<bean id="propertyConfigurer"-->
          <!--class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
        <!--<property name="locations">-->
            <!--<list>-->
                <!--<value>classpath:conf/db.properties</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
    <!--<context:property-placeholder location="classpath:conf/db.properties"/>-->

    <!--<bean id="dataSource" name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">-->
        <!--&lt;!&ndash; 指定连接数据库的驱动&ndash;&gt;-->
        <!--<property name="driverClass" value="${driverClassName}"/>-->
        <!--&lt;!&ndash; 指定连接数据库的URL&ndash;&gt;-->
        <!--<property name="jdbcUrl" value="${url}"/>-->
        <!--&lt;!&ndash; 指定连接数据库的用户名&ndash;&gt;-->
        <!--<property name="user" value="${username}"/>-->
        <!--&lt;!&ndash; 指定连接数据库的密码&ndash;&gt;-->
        <!--<property name="password" value="${password}"/>-->
        <!--&lt;!&ndash; 指定连接池中保留的最大连接数. Default:15&ndash;&gt;-->
        <!--<property name="maxPoolSize" value="${maxPoolSize}"/>-->
        <!--&lt;!&ndash; 指定连接池中保留的最小连接数&ndash;&gt;-->
        <!--<property name="minPoolSize" value="${minPoolSize}"/>-->
        <!--&lt;!&ndash; 指定连接池的初始化连接数  取值应在minPoolSize 与 maxPoolSize 之间.Default:3&ndash;&gt;-->
        <!--<property name="initialPoolSize" value="${initialPoolSize}"/>-->
        <!--&lt;!&ndash; 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 Default:0&ndash;&gt;-->
        <!--<property name="maxIdleTime" value="${maxIdleTime}"/>-->
        <!--&lt;!&ndash; 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. Default:3&ndash;&gt;-->
        <!--<property name="acquireIncrement" value="${acquireIncrement}"/>-->
        <!--&lt;!&ndash; JDBC的标准,用以控制数据源内加载的PreparedStatements数量。-->
        <!--但由于预缓存的statements属于单个connection而不是整个连接池所以设置这个参数需要考虑到多方面的因数.如果maxStatements与maxStatementsPerConnection均为0,则缓存被关闭。Default:0&ndash;&gt;-->
        <!--<property name="maxStatements" value="${maxStatements}"/>-->
        <!--&lt;!&ndash; 每60秒检查所有连接池中的空闲连接.Default:0 &ndash;&gt;-->
        <!--<property name="idleConnectionTestPeriod" value="${idleConnectionTestPeriod}"/>-->
    <!--</bean>-->
</beans>